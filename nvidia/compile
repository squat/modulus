#!/bin/bash
set -e

# Download kernel sources using common function.
# shellcheck disable=SC1091
. /opt/modulus/modulus src

echo "Compiling NVIDIA modules"
mkdir -p /tmp/nvidia
pushd /tmp/nvidia
curl -Ls "http://us.download.nvidia.com/XFree86/Linux-x86_64/$DRIVER_VERSION/NVIDIA-Linux-x86_64-$DRIVER_VERSION.run" -o nvidia.run
chmod +x nvidia.run
./nvidia.run -x -s
pushd "./NVIDIA-Linux-x86_64-$DRIVER_VERSION"
export IGNORE_MISSING_MODULE_SYMVERS=1
./nvidia-installer -s -n \
    --kernel-name="$KERNEL_VERSION" \
    --kernel-source-path=/usr/src/linux \
    --no-check-for-alternate-installs \
    --no-opengl-files \
    --no-distro-scripts \
    --kernel-install-path="$PWD" \
    --log-file-name="$PWD"/nvidia-installer.log || true
if [ -e kernel/nvidia.ko ] ; then echo "Successfully compiled NVIDIA modules" ; else echo "Failed to compile NVIDIA modules" && cat "$PWD"/nvidia-installer.log && exit 1 ; fi

echo "Archiving assets"
mkdir -p /out/lib/modules/"$KERNEL_VERSION" /out/bin
cp ./*.so* /out/lib
cp kernel/*.ko /out/lib/modules/"$KERNEL_VERSION"
for b in nvidia-debugdump nvidia-cuda-mps-control nvidia-xconfig nvidia-modprobe nvidia-smi nvidia-cuda-mps-server nvidia-persistenced nvidia-settings; do cp "$b" /out/bin/; done
